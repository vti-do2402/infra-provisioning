name: Terraform Apply on Merge to branch main

on:
  push:
    branches:
      - main

# Add concurrency to prevent multiple runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform-apply:
    name: Terraform Apply
    runs-on: infra-ubuntu-24-04
    timeout-minutes: 60

    strategy:
      matrix:
        environment: [dev] # Run plan for dev only, ideally this will be [dev, prod]

    environment:
      name: ${{ matrix.environment }}
      url: ${{ steps.apply.outputs.apply_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup AWS and Terraform
        uses: ./.github/actions/setup
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Fetch terraform.tfvars from GitHub Secrets
        working-directory: environments/${{ matrix.environment }}
        run: |
          if [ "${{ matrix.environment }}" = "dev" ]; then
            echo "${{ secrets.TFVARS_DEV }}" | base64 -d > terraform.tfvars
          elif [ "${{ matrix.environment }}" = "prod" ]; then
            echo "${{ secrets.TFVARS_PROD }}" | base64 -d > terraform.tfvars
          else
            echo "Unsupported environment: ${{ matrix.environment }}"
            exit 1
          fi

      - name: Run Terraform Plan
        id: plan
        uses: ./.github/actions/terraform-plan
        with:
          environment: ${{ matrix.environment }}
          is_destroy: false
          timeout: 30

      - name: Run Terraform Apply
        id: apply
        working-directory: environments/${{ matrix.environment }}
        run: |
          terraform apply --auto-approve -input=false ${{ steps.plan.outputs.plan-file }}
          echo "apply_url=https://${{ matrix.environment }}.example.com" >> $GITHUB_OUTPUT

      - name: Notify on Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const message = `✅ Infrastructure successfully deployed to ${{ matrix.environment }} environment\n`;
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: message
            });

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const message = `❌ Infrastructure deployment failed in ${{ matrix.environment }} environment\n`;
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: message
            });
